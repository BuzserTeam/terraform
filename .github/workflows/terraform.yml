name: 'Terraform Deploy'

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write # Required for OIDC
  contents: read
  pull-requests: write

jobs:
  lint:
    name: Lint Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.44.1

      - name: Init TFLint
        run: tflint --init
        working-directory: ./

      - name: Run TFLint
        run: tflint -f compact
        working-directory: ./

  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=false
        working-directory: ./

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./
        
      - name: Post Format Results
        if: steps.fmt.outcome == 'failure'
        run: |
          echo "⚠️ Terraform format check failed. Run 'terraform fmt' to fix."
          exit 1

  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'dev' }}
    runs-on: ubuntu-latest
    needs: [validate]
    # Skip this job for pull requests - just run lint
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          terraform_wrapper: false

      
  # Choose which account to deploy to based on environment
      - name: Configure Dev AWS Credentials
        if: ${{ github.event.inputs.environment == 'dev' || github.event.inputs.environment == null }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::433164750170:role/github_actions_role
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-session-name: GitHubActionsDevDeployment

      - name: Configure Dev AWS Credentials
        if: ${{ github.event.inputs.environment == 'dev' || github.event.inputs.environment == null }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::975612474095:role/github_actions_role
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-session-name: GitHubActionsDevDeployment

      # Terraform deployment steps
      - name: Terraform Init
        run: terraform init
        working-directory: ./
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan -var="environment=${{ github.event.inputs.environment || 'dev' }}"
        working-directory: ./
        
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./
        
      # Verify deployment
      - name: Verify Deployment
        run: |
          echo "Verifying deployment in ${{ github.event.inputs.environment || 'dev' }} environment"
          aws s3 ls
          aws sts get-caller-identity